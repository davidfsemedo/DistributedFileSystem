
package trab1.both.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DirServerWS", targetNamespace = "http://tp2/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DirServerWS {


    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getServerList", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetServerList")
    @ResponseWrapper(localName = "getServerListResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetServerListResponse")
    public List<String> getServerList();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "newServerConnected", targetNamespace = "http://tp2/", className = "trab1.both.ws.NewServerConnected")
    @ResponseWrapper(localName = "newServerConnectedResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.NewServerConnectedResponse")
    public void newServerConnected(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeDirectory", targetNamespace = "http://tp2/", className = "trab1.both.ws.RemoveDirectory")
    @ResponseWrapper(localName = "removeDirectoryResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.RemoveDirectoryResponse")
    public boolean removeDirectory(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNextId", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetNextId")
    @ResponseWrapper(localName = "getNextIdResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetNextIdResponse")
    public String getNextId();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeFile", targetNamespace = "http://tp2/", className = "trab1.both.ws.RemoveFile")
    @ResponseWrapper(localName = "removeFileResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.RemoveFileResponse")
    public boolean removeFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws IOException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "pushFile", targetNamespace = "http://tp2/", className = "trab1.both.ws.PushFile")
    @ResponseWrapper(localName = "pushFileResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.PushFileResponse")
    public void pushFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        byte[] arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        long arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        long arg4)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns trab1.both.ws.FileInfo
     * @throws InfoNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFileInfo", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetFileInfo")
    @ResponseWrapper(localName = "getFileInfoResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetFileInfoResponse")
    public FileInfo getFileInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InfoNotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns byte[]
     * @throws InfoNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "pullFile", targetNamespace = "http://tp2/", className = "trab1.both.ws.PullFile")
    @ResponseWrapper(localName = "pullFileResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.PullFileResponse")
    public byte[] pullFile(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        long arg1)
        throws InfoNotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUrl", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetUrl")
    @ResponseWrapper(localName = "getUrlResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetUrlResponse")
    public String getUrl();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommunity", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetCommunity")
    @ResponseWrapper(localName = "getCommunityResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetCommunityResponse")
    public String getCommunity();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws InfoNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createDir", targetNamespace = "http://tp2/", className = "trab1.both.ws.CreateDir")
    @ResponseWrapper(localName = "createDirResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.CreateDirResponse")
    public boolean createDir(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InfoNotFoundException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "copyFileServerToServer", targetNamespace = "http://tp2/", className = "trab1.both.ws.CopyFileServerToServer")
    @ResponseWrapper(localName = "copyFileServerToServerResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.CopyFileServerToServerResponse")
    public boolean copyFileServerToServer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateKnownServerList", targetNamespace = "http://tp2/", className = "trab1.both.ws.UpdateKnownServerList")
    @ResponseWrapper(localName = "updateKnownServerListResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.UpdateKnownServerListResponse")
    public void updateKnownServerList(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "receiveShutdownAnnouncement", targetNamespace = "http://tp2/", className = "trab1.both.ws.ReceiveShutdownAnnouncement")
    @ResponseWrapper(localName = "receiveShutdownAnnouncementResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.ReceiveShutdownAnnouncementResponse")
    public List<String> receiveShutdownAnnouncement(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getName", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetName")
    @ResponseWrapper(localName = "getNameResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.GetNameResponse")
    public String getName();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws InfoNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dir", targetNamespace = "http://tp2/", className = "trab1.both.ws.Dir")
    @ResponseWrapper(localName = "dirResponse", targetNamespace = "http://tp2/", className = "trab1.both.ws.DirResponse")
    public List<String> dir(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InfoNotFoundException_Exception
    ;

}
